---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Ahorcado">
  <a href="/" class="back-to-menu">&#8592; Volver al Menú Principal</a>
  <h1>Ahorcado</h1>
  <div class="hangman-container game-container">
    <svg id="hangman-drawing" width="200" height="200" viewBox="0 0 200 200">
      <!-- Base -->
      <line x1="10" y1="190" x2="100" y2="190" stroke="var(--text-color)" stroke-width="4" />
      <!-- Post -->
      <line x1="50" y1="190" x2="50" y2="10" stroke="var(--text-color)" stroke-width="4" />
      <!-- Beam -->
      <line x1="50" y1="10" x2="150" y2="10" stroke="var(--text-color)" stroke-width="4" />
      <!-- Rope -->
      <line x1="150" y1="10" x2="150" y2="30" stroke="var(--text-color)" stroke-width="4" />

      <!-- Head -->
      <circle id="hangman-head" cx="150" cy="50" r="20" stroke="var(--text-color)" stroke-width="4" fill="transparent" class="hangman-part" />
      <!-- Body -->
      <line id="hangman-body" x1="150" y1="70" x2="150" y2="120" stroke="var(--text-color)" stroke-width="4" class="hangman-part" />
      <!-- Left Arm -->
      <line id="hangman-left-arm" x1="150" y1="80" x2="120" y2="110" stroke="var(--text-color)" stroke-width="4" class="hangman-part" />
      <!-- Right Arm -->
      <line id="hangman-right-arm" x1="150" y1="80" x2="180" y2="110" stroke="var(--text-color)" stroke-width="4" class="hangman-part" />
      <!-- Left Leg -->
      <line id="hangman-left-leg" x1="150" y1="120" x2="130" y2="160" stroke="var(--text-color)" stroke-width="4" class="hangman-part" />
      <!-- Right Leg -->
      <line id="hangman-right-leg" x1="150" y1="120" x2="170" y2="160" stroke="var(--text-color)" stroke-width="4" class="hangman-part" />
    </svg>
    <div class="word-display" id="word-display"></div>
    <div class="guesses-left" id="guesses-left">Intentos restantes: 6</div>
    <div class="guessed-letters" id="guessed-letters">Letras usadas:</div>
    <div class="keyboard" id="keyboard"></div>
    <button id="restart-hangman">Reiniciar Juego</button>
  </div>
</Layout>

<style>
  .hangman-container {
    /* Inherits game-container styles from Layout.astro */
  }

  #hangman-drawing .hangman-part {
    visibility: hidden;
  }

  .word-display {
    font-size: 2.8em;
    letter-spacing: 8px;
    margin-bottom: 20px;
    padding: 15px 25px;
    border: 2px solid var(--primary-color);
    border-radius: 10px;
    background-color: var(--background-color);
    color: var(--text-color);
    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .guesses-left, .guessed-letters {
    font-size: 1.3em;
    color: var(--text-color);
    font-weight: 600;
  }

  .keyboard {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(45px, 1fr));
    gap: 8px;
    width: 90%;
    max-width: 700px;
    margin-top: 25px;
  }

  .key {
    background-color: var(--primary-color);
    color: var(--background-color);
    border: none;
    padding: 12px;
    font-size: 1.3em;
    cursor: pointer;
    text-align: center;
    border-radius: 8px;
    transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);
  }

  .key:hover:not(.disabled) {
    background-color: var(--accent-color);
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25), 0 0 15px var(--accent-color); /* Added glow */
  }

  .key.disabled {
    background-color: var(--key-disabled-background);
    color: var(--secondary-color);
    cursor: not-allowed;
    opacity: 0.7;
    box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  #restart-hangman {
    margin-top: 30px;
  }
</style>

<script is:inline>
  const words = ["PROGRAMACION", "COMPUTADORA", "DESARROLLO", "JAVASCRIPT", "ASTRO", "FRONTEND", "BACKEND"];
  let selectedWord = '';
  let guessedWord = [];
  let wrongGuesses = 0;
  let guessedLetters = [];
  const maxWrongGuesses = 6;

  const wordDisplay = document.getElementById('word-display');
  const guessesLeftDisplay = document.getElementById('guesses-left');
  const guessedLettersDisplay = document.getElementById('guessed-letters');
  const keyboard = document.getElementById('keyboard');
  const restartButton = document.getElementById('restart-hangman');
  const hangmanParts = [
    document.getElementById('hangman-head'),
    document.getElementById('hangman-body'),
    document.getElementById('hangman-left-arm'),
    document.getElementById('hangman-right-arm'),
    document.getElementById('hangman-left-leg'),
    document.getElementById('hangman-right-leg'),
  ];

  function initializeGame() {
    selectedWord = words[Math.floor(Math.random() * words.length)];
    guessedWord = Array(selectedWord.length).fill('_');
    wrongGuesses = 0;
    guessedLetters = [];
    hangmanParts.forEach(part => part.style.visibility = 'hidden');
    renderGame();
    createKeyboard();
  }

  function renderGame() {
    wordDisplay.textContent = guessedWord.join(' ');
    guessesLeftDisplay.textContent = `Intentos restantes: ${maxWrongGuesses - wrongGuesses}`;
    guessedLettersDisplay.textContent = `Letras usadas: ${guessedLetters.join(', ')}`;

    for (let i = 0; i < wrongGuesses; i++) {
      if (hangmanParts[i]) {
        hangmanParts[i].style.visibility = 'visible';
      }
    }

    if (wrongGuesses >= maxWrongGuesses) {
      guessesLeftDisplay.textContent = `¡Has perdido! La palabra era: ${selectedWord}`;
      disableKeyboard();
    } else if (!guessedWord.includes('_')) {
      guessesLeftDisplay.textContent = `¡Felicidades! Has ganado.`;
      disableKeyboard();
    }
  }

  function createKeyboard() {
    keyboard.innerHTML = '';
    for (let i = 65; i <= 90; i++) { // ASCII for A-Z
      const letter = String.fromCharCode(i);
      const keyElement = document.createElement('div');
      keyElement.classList.add('key');
      keyElement.textContent = letter;
      keyElement.dataset.letter = letter;
      keyElement.addEventListener('click', handleGuess);
      keyboard.appendChild(keyElement);
    }
  }

  function handleGuess(event) {
    const guessedLetter = event.target.dataset.letter;
    if (guessedLetters.includes(guessedLetter) || wrongGuesses >= maxWrongGuesses || !guessedWord.includes('_')) {
      return;
    }

    guessedLetters.push(guessedLetter);
    event.target.classList.add('disabled');

    if (selectedWord.includes(guessedLetter)) {
      for (let i = 0; i < selectedWord.length; i++) {
        if (selectedWord[i] === guessedLetter) {
          guessedWord[i] = guessedLetter;
        }
      }
    } else {
      wrongGuesses++;
    }
    renderGame();
  }

  function disableKeyboard() {
    document.querySelectorAll('.key').forEach(key => {
      key.classList.add('disabled');
      key.removeEventListener('click', handleGuess);
    });
  }

  restartButton.addEventListener('click', initializeGame);

  initializeGame();
</script>